apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

android {

    def DEV_API_URL = "\"https://stage-xinlangv2.app.wondertemple.com\""
    def STAG_API_URL = "\"https://stage-xinlangv2.app.wondertemple.com\""
    def GRAY_API_URL = "\"https://grey-xinlangv2.app.wondertemple.com\""
    def OFF_API_URL = "\"https://xinlangv2.app.wondertemple.com\""

    def TALKINGDATA_APP_ID_TEST = "\"C0F9194682C74765AFA759DCF411980C\""
    def TALKINGDATA_APP_ID = "\"E7876BC60DE942C9948B3B660AE121FC\""

    compileSdkVersion rootProject.compileSdkVersion
    buildToolsVersion rootProject.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode rootProject.versionCode
        versionName rootProject.versionName

        buildConfigField("String", "BASE_API", "${OFF_API_URL}")
        multiDexEnabled = true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildFeatures {
        viewBinding true
    }

    signingConfigs {
        releaseConfig {
            storeFile file("../app.keystore")
            storePassword "111111"
            keyAlias "app"
            keyPassword "111111"
        }
    }

    buildTypes {
        debug {
            manifestPlaceholders = [
                    APP_CHANNEL  : "officialwebsite",
                    JPUSH_PKGNAME: rootProject.applicationId,
            ]

            signingConfig signingConfigs.releaseConfig
            debuggable true
            minifyEnabled false
            zipAlignEnabled false
            // 移除无用的resource文件
            shrinkResources false
            buildConfigField 'String', 'envir', '"dev"'
            buildConfigField("String", "BASE_API", "${DEV_API_URL}")

        }
        stagdebug {
            manifestPlaceholders = [
                    APP_CHANNEL  : "officialwebsite",
                    JPUSH_PKGNAME: rootProject.applicationId,
            ]

            signingConfig signingConfigs.releaseConfig
            debuggable true
            minifyEnabled false
            zipAlignEnabled false
            // 移除无用的resource文件
            shrinkResources false
            buildConfigField 'String', 'envir', '"stagre"'
            buildConfigField("String", "BASE_API", "${STAG_API_URL}")

        }
        stagrelease {
            manifestPlaceholders = [
                    APP_CHANNEL  : "officialwebsite",
                    JPUSH_PKGNAME: rootProject.applicationId,
            ]

            signingConfig signingConfigs.releaseConfig
            debuggable true
            minifyEnabled true
            zipAlignEnabled true
            // 移除无用的resource文件
            shrinkResources false
            buildConfigField 'String', 'envir', '"stagre"'
            buildConfigField("String", "BASE_API", "${STAG_API_URL}")
        }
        graydebug {
            manifestPlaceholders = [
                    APP_CHANNEL  : "officialwebsite",
                    JPUSH_PKGNAME: rootProject.applicationId,
            ]

            signingConfig signingConfigs.releaseConfig
            debuggable true
            minifyEnabled false
            zipAlignEnabled false
            // 移除无用的resource文件
            shrinkResources false
            buildConfigField 'String', 'envir', '"off"'
            buildConfigField("String", "BASE_API", "${GRAY_API_URL}")
        }
        offdebug {
            manifestPlaceholders = [
                    APP_CHANNEL  : "officialwebsite",
                    JPUSH_PKGNAME: rootProject.applicationId,
            ]
            signingConfig signingConfigs.releaseConfig
            debuggable true
            minifyEnabled false
            zipAlignEnabled false
            // 移除无用的resource文件
            shrinkResources false
            buildConfigField 'String', 'envir', '"off"'
            buildConfigField("String", "BASE_API", "${OFF_API_URL}")
        }
        release {
            manifestPlaceholders = [
                    APP_CHANNEL  : "officialwebsite",
                    JPUSH_PKGNAME: rootProject.applicationId,
            ]

            signingConfig signingConfigs.releaseConfig
            debuggable false
            minifyEnabled true
            zipAlignEnabled true
            // 移除无用的resource文件
            shrinkResources false
            buildConfigField 'String', 'envir', '"off"'
            buildConfigField("String", "BASE_API", "${OFF_API_URL}")
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }

    kotlinOptions {
        // work-runtime-ktx 2.1.0 and above now requires Java 8
        jvmTarget = rootProject.jvmTarget
        // Enable Coroutines and Flow APIs 开启协程的使用
        freeCompilerArgs += "-Xopt-in=kotlinx.coroutines.ExperimentalCoroutinesApi"
        freeCompilerArgs += "-Xopt-in=kotlinx.coroutines.FlowPreview"
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }

}

dependencies {
    //*********************基本组件***********************
    // kotlin 版本
    implementation "org.jetbrains.kotlin:kotlin-stdlib:1.7.0"
    implementation "org.jetbrains.kotlin:kotlin-reflect:1.7.0"

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'com.google.android.material:material:1.4.0'
    implementation "androidx.appcompat:appcompat:1.3.1"
    implementation "androidx.constraintlayout:constraintlayout:2.1.0"

    implementation "androidx.fragment:fragment-ktx:1.3.5"
    implementation "androidx.lifecycle:lifecycle-extensions:2.2.0"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:2.2.0"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0"

    implementation "androidx.viewpager2:viewpager2:1.0.0"
    implementation "com.google.code.gson:gson:2.8.5"

    // 状态栏
    // 基础依赖包，必须要依赖
    implementation 'com.geyifeng.immersionbar:immersionbar:3.2.2'
    // kotlin扩展（可选）
    implementation 'com.geyifeng.immersionbar:immersionbar-ktx:3.2.2'
    // fragment快速实现（可选）已废弃
    implementation 'com.geyifeng.immersionbar:immersionbar-components:3.2.2'

    // Kotlin coil 图片加载框架
    implementation "io.coil-kt:coil:2.1.0"
    implementation "io.coil-kt:coil-gif:2.1.0"
    implementation "io.coil-kt:coil-svg:2.1.0"
    implementation "io.coil-kt:coil-video:2.1.0"

    // 自动生成SPI暴露服务文件
    implementation "com.google.auto.service:auto-service:1.0-rc6"
    implementation "com.google.auto.service:auto-service-annotations:1.0-rc6"

    //规避 64K 限制
    implementation "androidx.multidex:multidex:2.0.1"

    //通用RecyclerViewAdapter
    implementation "com.github.CymChad:BaseRecyclerViewAdapterHelper:3.0.4"

    //腾讯 阿里路由
    implementation 'com.alibaba:arouter-api:1.5.2'

    //腾讯 mmkv
    implementation 'com.tencent:mmkv-static:1.2.13'

    //文件下载引擎，稳定、高效、灵活、简单易用
    api 'com.liulishuo.filedownloader:library:1.7.7'

    // 权限请求框架：https://github.com/getActivity/XXPermissions
    implementation 'com.github.getActivity:XXPermissions:11.6'
    implementation 'com.github.bumptech.glide:glide:4.12.0'

    //bugly
    implementation 'com.tencent.bugly:crashreport:3.4.4'
    implementation 'com.tencent.bugly:nativecrashreport:3.9.2'

    // 查看数据库  https://github.com/amitshekhariitbhu/Android-Debug-Database
    // 查看数据库地址方法 项目中搜索 "数据库地址" 得到地址之后 在浏览器打开连接
    // 记得用完注释掉，否则线上报错
    stagdebugImplementation 'com.amitshekhar.android:debug-db:1.0.6'
    offdebugImplementation 'com.amitshekhar.android:debug-db:1.0.6'
    graydebugImplementation 'com.amitshekhar.android:debug-db:1.0.6'

}
